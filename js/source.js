let width = 400, height= 700;
const domElement = document.getElementById('product');
let two = new Two({width, height}).appendTo(domElement);

/* start - door configs */
let doorWidth = 0;
let doorHeight = 0;
let doorArea = null;
/* end - door configs */

/* start - auxiliary lock intance */
let auxLockInstance = null;
const AUXLOCKRADIUS = 10;
/* end - auxiliary lock intance */


let onSubmit = (event) => {
  event.preventDefault();

    let xml = `<soap:Body>
    <ns2:Order xmlns:ns2="http://dotservice.doorgroup.com/Types" xmlns:ns3="http://dotservice.doorgroup.com/DoorgroupService/" XMLversion="1.0" TransferSequenceNumber="21" SoftwareName="EDGE" SoftwareVersion="1.0">
      <ns2:HeaderInformation>
        <ns2:Manufacturer>Curries</ns2:Manufacturer>
        <ns2:OrderGeneratedFully>F</ns2:OrderGeneratedFully>
        <ns2:MeasurementSystem>US</ns2:MeasurementSystem>
        <ns2:CustomerNumber>1700</ns2:CustomerNumber>
        <ns2:POnumber>1066962</ns2:POnumber>
        <ns2:QuoteNumber>
          <ns2:QuotePrefix> </ns2:QuotePrefix>
          <ns2:QuoteNum>0</ns2:QuoteNum>
        </ns2:QuoteNumber>
        <ns2:ProjectInfo>
          <ns2:ProjectName>1066962[TOP]</ns2:ProjectName>
          <ns2:ProjectDesc>75-19-6786|1066962[TOP]</ns2:ProjectDesc>
        </ns2:ProjectInfo>
        <ns2:ProjectTransferSequenceNumber>1</ns2:ProjectTransferSequenceNumber>
        <ns2:RequiredDate>2020-03-27</ns2:RequiredDate>
        <ns2:SoldToInfo>
          <ns2:SoldToName>Kelley Bros.</ns2:SoldToName>
          <ns2:SoldToAddress1>9 Skyline Drive East</ns2:SoldToAddress1>
          <ns2:SoldToCity>Clarks Summit</ns2:SoldToCity>
          <ns2:SoldToState>PA</ns2:SoldToState>
          <ns2:SoldToZip>18411</ns2:SoldToZip>
          <ns2:SoldToCountry>US</ns2:SoldToCountry>
        </ns2:SoldToInfo>
        <ns2:ShippingInfo>
          <ns2:ShippingName>Kelley Bros.</ns2:ShippingName>
          <ns2:ShippingAddress1>9 Skyline Drive East</ns2:ShippingAddress1>
          <ns2:ShippingAddress2/>
          <ns2:ShippingCity>Clarks Summit</ns2:ShippingCity>
          <ns2:ShippingProvinceState>PA</ns2:ShippingProvinceState>
          <ns2:ShippingZip>18411</ns2:ShippingZip>
          <ns2:ShippingCountry>US</ns2:ShippingCountry>
          <ns2:SHContactInfo>
            <ns2:SHContactName/>
            <ns2:SHContactPhoneNumber/>
          </ns2:SHContactInfo>
          <ns2:SHContactInfo>
            <ns2:SHContactName/>
            <ns2:SHContactPhoneNumber/>
          </ns2:SHContactInfo>
          <ns2:ShipVia>Pool Ship</ns2:ShipVia>
          <ns2:ShipViaCode>1</ns2:ShipViaCode>
          <ns2:Carrier/>
          <ns2:PrepaidCollect> </ns2:PrepaidCollect>
          <ns2:ShippingInstruction/>
          <ns2:TransferShipment>
            <ns2:TSType>T</ns2:TSType>
            <ns2:TransferPoint/>
            <ns2:TransferPointDesc>Easton, PA</ns2:TransferPointDesc>
            <ns2:TSShipVia>LTL-Do not hold</ns2:TSShipVia>
            <ns2:TSCarrier>NESC</ns2:TSCarrier>
          </ns2:TransferShipment>
        </ns2:ShippingInfo>
        <ns2:AttachmentInfo>
          <ns2:AttachmentID>DoorOrder.pdf</ns2:AttachmentID>
          <ns2:AttachmentFile></ns2:AttachmentFile>
        </ns2:AttachmentInfo>
        <ns2:OrderNo>0851436</ns2:OrderNo>
        <ns2:ProgramType>SMFG</ns2:ProgramType>
        <ns2:GeneralNotes/>
        <ns2:SenderName>Rewrite2, COW</ns2:SenderName>
        <ns2:SenderEmail>Cow.Rewrite2@assaabloy.com</ns2:SenderEmail>
        <ns2:SenderPhone/>
      </ns2:HeaderInformation>
      <ns2:OrderLine>
        <ns2:LineGeneratedFully>F</ns2:LineGeneratedFully>
        <ns2:ProductType>Door</ns2:ProductType>
        <ns2:LineNumber>1</ns2:LineNumber>
        <ns2:Quantity>1</ns2:Quantity>
        <ns2:MarkNumber>
          <ns2:MarkID>101-01</ns2:MarkID>
          <ns2:Qty>1</ns2:Qty>
        </ns2:MarkNumber>
        <ns2:Weight>0</ns2:Weight>
        <ns2:OrderLineData>
          <ns2:Width>36.0000</ns2:Width>
          <ns2:Height>84.0000</ns2:Height>
          <ns2:Series>707</ns2:Series>
          <ns2:DrFaceType>F</ns2:DrFaceType>
          <ns2:DoorThickness>1.75</ns2:DoorThickness>
          <ns2:Bevel>A</ns2:Bevel>
          <ns2:DrEdge>N</ns2:DrEdge>
          <ns2:Astragal>
            <ns2:AstragalCode/>
          </ns2:Astragal>
          <ns2:Labeling>
            <ns2:Certifications/>
          </ns2:Labeling>
          <ns2:Gauge>18</ns2:Gauge>
          <ns2:Material>
            <ns2:MaterialType>CR</ns2:MaterialType>
          </ns2:Material>
          <ns2:Hand>R</ns2:Hand>
          <ns2:Prep>
            <ns2:PrepCategory>H</ns2:PrepCategory>
            <ns2:PrepOrderCode>453</ns2:PrepOrderCode>
          </ns2:Prep>
          <ns2:Prep>
            <ns2:PrepCategory>L</ns2:PrepCategory>
            <ns2:PrepOrderCode>G2A</ns2:PrepOrderCode>
            <ns2:PrepManufacturer>SA</ns2:PrepManufacturer>
            <ns2:PrepFunction>28-10U65</ns2:PrepFunction>
            <ns2:PrepTrim>LL</ns2:PrepTrim>
          </ns2:Prep>
          <ns2:Prep>
            <ns2:PrepCategory>A</ns2:PrepCategory>
            <ns2:PrepOrderCode>CL</ns2:PrepOrderCode>
          </ns2:Prep>
        </ns2:OrderLineData>
      </ns2:OrderLine>
      <ns2:OrderLine>
        <ns2:LineGeneratedFully>F</ns2:LineGeneratedFully>
        <ns2:ProductType>Door</ns2:ProductType>
        <ns2:LineNumber>2</ns2:LineNumber>
        <ns2:Quantity>1</ns2:Quantity>
        <ns2:MarkNumber>
          <ns2:MarkID>102-01</ns2:MarkID>
          <ns2:Qty>1</ns2:Qty>
        </ns2:MarkNumber>
        <ns2:Weight>0</ns2:Weight>
        <ns2:OrderLineData>
          <ns2:Width>36.0000</ns2:Width>
          <ns2:Height>84.0000</ns2:Height>
          <ns2:Series>707</ns2:Series>
          <ns2:DrFaceType>F</ns2:DrFaceType>
          <ns2:DoorThickness>1.75</ns2:DoorThickness>
          <ns2:Bevel>A</ns2:Bevel>
          <ns2:DrEdge>N</ns2:DrEdge>
          <ns2:Astragal>
            <ns2:AstragalCode/>
          </ns2:Astragal>
          <ns2:Labeling>
            <ns2:Certifications/>
          </ns2:Labeling>
          <ns2:Gauge>18</ns2:Gauge>
          <ns2:Material>
            <ns2:MaterialType>CR</ns2:MaterialType>
          </ns2:Material>
          <ns2:Hand>L</ns2:Hand>
          <ns2:Prep>
            <ns2:PrepCategory>H</ns2:PrepCategory>
            <ns2:PrepOrderCode>453</ns2:PrepOrderCode>
          </ns2:Prep>
          <ns2:Prep>
            <ns2:PrepCategory>L</ns2:PrepCategory>
            <ns2:PrepOrderCode>G2A</ns2:PrepOrderCode>
            <ns2:PrepManufacturer>SA</ns2:PrepManufacturer>
            <ns2:PrepFunction>28-10U15</ns2:PrepFunction>
            <ns2:PrepTrim>LL</ns2:PrepTrim>
          </ns2:Prep>
        </ns2:OrderLineData>
      </ns2:OrderLine>
      <ns2:OrderLine>
        <ns2:LineGeneratedFully>F</ns2:LineGeneratedFully>
        <ns2:ProductType>Door</ns2:ProductType>
        <ns2:LineNumber>3</ns2:LineNumber>
        <ns2:Quantity>1</ns2:Quantity>
        <ns2:MarkNumber>
          <ns2:MarkID>102-02</ns2:MarkID>
          <ns2:Qty>1</ns2:Qty>
        </ns2:MarkNumber>
        <ns2:Weight>0</ns2:Weight>
        <ns2:OrderLineData>
          <ns2:Width>36.0000</ns2:Width>
          <ns2:Height>84.0000</ns2:Height>
          <ns2:Series>707</ns2:Series>
          <ns2:DrFaceType>F</ns2:DrFaceType>
          <ns2:DoorThickness>1.75</ns2:DoorThickness>
          <ns2:Bevel>A</ns2:Bevel>
          <ns2:DrEdge>N</ns2:DrEdge>
          <ns2:Astragal>
            <ns2:AstragalCode/>
          </ns2:Astragal>
          <ns2:Labeling>
            <ns2:Certifications/>
          </ns2:Labeling>
          <ns2:Gauge>18</ns2:Gauge>
          <ns2:Material>
            <ns2:MaterialType>CR</ns2:MaterialType>
          </ns2:Material>
          <ns2:Hand>LR</ns2:Hand>
          <ns2:Prep>
            <ns2:PrepCategory>H</ns2:PrepCategory>
            <ns2:PrepOrderCode>453</ns2:PrepOrderCode>
          </ns2:Prep>
          <ns2:Prep>
            <ns2:PrepCategory>L</ns2:PrepCategory>
            <ns2:PrepOrderCode>G2A</ns2:PrepOrderCode>
            <ns2:PrepManufacturer>SA</ns2:PrepManufacturer>
            <ns2:PrepFunction>28-10U15</ns2:PrepFunction>
            <ns2:PrepTrim>LL</ns2:PrepTrim>
          </ns2:Prep>
        </ns2:OrderLineData>
      </ns2:OrderLine>
      <ns2:OrderLine>
        <ns2:LineGeneratedFully>F</ns2:LineGeneratedFully>
        <ns2:ProductType>Door</ns2:ProductType>
        <ns2:LineNumber>4</ns2:LineNumber>
        <ns2:Quantity>2</ns2:Quantity>
        <ns2:MarkNumber>
          <ns2:MarkID>103-01</ns2:MarkID>
          <ns2:Qty>1</ns2:Qty>
        </ns2:MarkNumber>
        <ns2:MarkNumber>
          <ns2:MarkID>111-01</ns2:MarkID>
          <ns2:Qty>1</ns2:Qty>
        </ns2:MarkNumber>
        <ns2:Weight>0</ns2:Weight>
        <ns2:OrderLineData>
          <ns2:Width>36.0000</ns2:Width>
          <ns2:Height>84.0000</ns2:Height>
          <ns2:Series>707</ns2:Series>
          <ns2:DrFaceType>F</ns2:DrFaceType>
          <ns2:DoorThickness>1.75</ns2:DoorThickness>
          <ns2:Bevel>A</ns2:Bevel>
          <ns2:DrEdge>N</ns2:DrEdge>
          <ns2:Astragal>
            <ns2:AstragalCode/>
          </ns2:Astragal>
          <ns2:Labeling>
            <ns2:Certifications/>
          </ns2:Labeling>
          <ns2:Gauge>18</ns2:Gauge>
          <ns2:Material>
            <ns2:MaterialType>CR</ns2:MaterialType>
          </ns2:Material>
          <ns2:Hand>R</ns2:Hand>
          <ns2:Prep>
            <ns2:PrepCategory>H</ns2:PrepCategory>
            <ns2:PrepOrderCode>453</ns2:PrepOrderCode>
          </ns2:Prep>
          <ns2:Prep>
            <ns2:PrepCategory>L</ns2:PrepCategory>
            <ns2:PrepOrderCode>G2A</ns2:PrepOrderCode>
            <ns2:PrepManufacturer>SA</ns2:PrepManufacturer>
            <ns2:PrepFunction>28-10U15</ns2:PrepFunction>
            <ns2:PrepTrim>LL</ns2:PrepTrim>
          </ns2:Prep>
          <ns2:Prep>
            <ns2:PrepCategory>A</ns2:PrepCategory>
            <ns2:PrepOrderCode>CL</ns2:PrepOrderCode>
          </ns2:Prep>
        </ns2:OrderLineData>
      </ns2:OrderLine>
      <ns2:OrderLine>
        <ns2:LineGeneratedFully>F</ns2:LineGeneratedFully>
        <ns2:ProductType>Door</ns2:ProductType>
        <ns2:LineNumber>5</ns2:LineNumber>
        <ns2:Quantity>2</ns2:Quantity>
        <ns2:MarkNumber>
          <ns2:MarkID>103-02</ns2:MarkID>
          <ns2:Qty>1</ns2:Qty>
        </ns2:MarkNumber>
        <ns2:MarkNumber>
          <ns2:MarkID>113-01</ns2:MarkID>
          <ns2:Qty>1</ns2:Qty>
        </ns2:MarkNumber>
        <ns2:Weight>0</ns2:Weight>
        <ns2:OrderLineData>
          <ns2:Width>36.0000</ns2:Width>
          <ns2:Height>84.0000</ns2:Height>
          <ns2:Series>707</ns2:Series>
          <ns2:DrFaceType>F</ns2:DrFaceType>
          <ns2:DoorThickness>1.75</ns2:DoorThickness>
          <ns2:Bevel>A</ns2:Bevel>
          <ns2:DrEdge>N</ns2:DrEdge>
          <ns2:Astragal>
            <ns2:AstragalCode/>
          </ns2:Astragal>
          <ns2:Labeling>
            <ns2:Certifications/>
          </ns2:Labeling>
          <ns2:Gauge>18</ns2:Gauge>
          <ns2:Material>
            <ns2:MaterialType>CR</ns2:MaterialType>
          </ns2:Material>
          <ns2:Hand>L</ns2:Hand>
          <ns2:Prep>
            <ns2:PrepCategory>H</ns2:PrepCategory>
            <ns2:PrepOrderCode>453</ns2:PrepOrderCode>
          </ns2:Prep>
          <ns2:Prep>
            <ns2:PrepCategory>L</ns2:PrepCategory>
            <ns2:PrepOrderCode>G2A</ns2:PrepOrderCode>
            <ns2:PrepManufacturer>SA</ns2:PrepManufacturer>
            <ns2:PrepFunction>28-60-10G04</ns2:PrepFunction>
            <ns2:PrepTrim>LL</ns2:PrepTrim>
          </ns2:Prep>
          <ns2:Prep>
            <ns2:PrepCategory>A</ns2:PrepCategory>
            <ns2:PrepOrderCode>CL</ns2:PrepOrderCode>
          </ns2:Prep>
        </ns2:OrderLineData>
      </ns2:OrderLine>
      <ns2:OrderLine>
        <ns2:LineGeneratedFully>F</ns2:LineGeneratedFully>
        <ns2:ProductType>Door</ns2:ProductType>
        <ns2:LineNumber>6</ns2:LineNumber>
        <ns2:Quantity>4</ns2:Quantity>
        <ns2:MarkNumber>
          <ns2:MarkID>104-01</ns2:MarkID>
          <ns2:Qty>1</ns2:Qty>
        </ns2:MarkNumber>
        <ns2:MarkNumber>
          <ns2:MarkID>119-01</ns2:MarkID>
          <ns2:Qty>1</ns2:Qty>
        </ns2:MarkNumber>
        <ns2:MarkNumber>
          <ns2:MarkID>125-01</ns2:MarkID>
          <ns2:Qty>1</ns2:Qty>
        </ns2:MarkNumber>
        <ns2:MarkNumber>
          <ns2:MarkID>126-01</ns2:MarkID>
          <ns2:Qty>1</ns2:Qty>
        </ns2:MarkNumber>
        <ns2:Weight>0</ns2:Weight>
        <ns2:OrderLineData>
          <ns2:Width>36.0000</ns2:Width>
          <ns2:Height>84.0000</ns2:Height>
          <ns2:Series>707</ns2:Series>
          <ns2:DrFaceType>F</ns2:DrFaceType>
          <ns2:DoorThickness>1.75</ns2:DoorThickness>
          <ns2:Bevel>A</ns2:Bevel>
          <ns2:DrEdge>N</ns2:DrEdge>
          <ns2:Astragal>
            <ns2:AstragalCode/>
          </ns2:Astragal>
          <ns2:Labeling>
            <ns2:Certifications/>
          </ns2:Labeling>
          <ns2:Gauge>18</ns2:Gauge>
          <ns2:Material>
            <ns2:MaterialType>CR</ns2:MaterialType>
          </ns2:Material>
          <ns2:Hand>L</ns2:Hand>
          <ns2:Prep>
            <ns2:PrepCategory>H</ns2:PrepCategory>
            <ns2:PrepOrderCode>453</ns2:PrepOrderCode>
          </ns2:Prep>
          <ns2:Prep>
            <ns2:PrepCategory>L</ns2:PrepCategory>
            <ns2:PrepOrderCode>G2A</ns2:PrepOrderCode>
            <ns2:PrepManufacturer>SA</ns2:PrepManufacturer>
            <ns2:PrepFunction>28-60-10G05</ns2:PrepFunction>
            <ns2:PrepTrim>LL</ns2:PrepTrim>
          </ns2:Prep>
          <ns2:Prep>
            <ns2:PrepCategory>A</ns2:PrepCategory>
            <ns2:PrepOrderCode>CL</ns2:PrepOrderCode>
          </ns2:Prep>
        </ns2:OrderLineData>
      </ns2:OrderLine>
      <ns2:OrderLine>
        <ns2:LineGeneratedFully>F</ns2:LineGeneratedFully>
        <ns2:ProductType>Door</ns2:ProductType>
        <ns2:LineNumber>7</ns2:LineNumber>
        <ns2:Quantity>5</ns2:Quantity>
        <ns2:MarkNumber>
          <ns2:MarkID>105-01</ns2:MarkID>
          <ns2:Qty>1</ns2:Qty>
        </ns2:MarkNumber>
        <ns2:MarkNumber>
          <ns2:MarkID>107-01</ns2:MarkID>
          <ns2:Qty>1</ns2:Qty>
        </ns2:MarkNumber>
        <ns2:MarkNumber>
          <ns2:MarkID>108-01</ns2:MarkID>
          <ns2:Qty>1</ns2:Qty>
        </ns2:MarkNumber>
        <ns2:MarkNumber>
          <ns2:MarkID>120-01</ns2:MarkID>
          <ns2:Qty>1</ns2:Qty>
        </ns2:MarkNumber>
        <ns2:MarkNumber>
          <ns2:MarkID>128-01</ns2:MarkID>
          <ns2:Qty>1</ns2:Qty>
        </ns2:MarkNumber>
        <ns2:Weight>0</ns2:Weight>
        <ns2:OrderLineData>
          <ns2:Width>36.0000</ns2:Width>
          <ns2:Height>84.0000</ns2:Height>
          <ns2:Series>707</ns2:Series>
          <ns2:DrFaceType>F</ns2:DrFaceType>
          <ns2:DoorThickness>1.75</ns2:DoorThickness>
          <ns2:Bevel>A</ns2:Bevel>
          <ns2:DrEdge>N</ns2:DrEdge>
          <ns2:Astragal>
            <ns2:AstragalCode/>
          </ns2:Astragal>
          <ns2:Labeling>
            <ns2:Certifications/>
          </ns2:Labeling>
          <ns2:Gauge>18</ns2:Gauge>
          <ns2:Material>
            <ns2:MaterialType>CR</ns2:MaterialType>
          </ns2:Material>
          <ns2:Hand>L</ns2:Hand>
          <ns2:Prep>
            <ns2:PrepCategory>H</ns2:PrepCategory>
            <ns2:PrepOrderCode>453</ns2:PrepOrderCode>
          </ns2:Prep>
          <ns2:Prep>
            <ns2:PrepCategory>L</ns2:PrepCategory>
            <ns2:PrepOrderCode>G2A</ns2:PrepOrderCode>
            <ns2:PrepManufacturer>SA</ns2:PrepManufacturer>
            <ns2:PrepFunction>28-10U15</ns2:PrepFunction>
            <ns2:PrepTrim>LL</ns2:PrepTrim>
          </ns2:Prep>
          <ns2:Prep>
            <ns2:PrepCategory>A</ns2:PrepCategory>
            <ns2:PrepOrderCode>CL</ns2:PrepOrderCode>
          </ns2:Prep>
        </ns2:OrderLineData>
      </ns2:OrderLine>
      <ns2:OrderLine>
        <ns2:LineGeneratedFully>F</ns2:LineGeneratedFully>
        <ns2:ProductType>Door</ns2:ProductType>
        <ns2:LineNumber>8</ns2:LineNumber>
        <ns2:Quantity>2</ns2:Quantity>
        <ns2:MarkNumber>
          <ns2:MarkID>106-01</ns2:MarkID>
          <ns2:Qty>1</ns2:Qty>
        </ns2:MarkNumber>
        <ns2:MarkNumber>
          <ns2:MarkID>109-01</ns2:MarkID>
          <ns2:Qty>1</ns2:Qty>
        </ns2:MarkNumber>
        <ns2:Weight>0</ns2:Weight>
        <ns2:OrderLineData>
          <ns2:Width>36.0000</ns2:Width>
          <ns2:Height>84.0000</ns2:Height>
          <ns2:Series>707</ns2:Series>
          <ns2:DrFaceType>F</ns2:DrFaceType>
          <ns2:DoorThickness>1.75</ns2:DoorThickness>
          <ns2:Bevel>A</ns2:Bevel>
          <ns2:DrEdge>N</ns2:DrEdge>
          <ns2:Astragal>
            <ns2:AstragalCode/>
          </ns2:Astragal>
          <ns2:Labeling>
            <ns2:Certifications/>
          </ns2:Labeling>
          <ns2:Gauge>18</ns2:Gauge>
          <ns2:Material>
            <ns2:MaterialType>CR</ns2:MaterialType>
          </ns2:Material>
          <ns2:Hand>L</ns2:Hand>
          <ns2:Prep>
            <ns2:PrepCategory>H</ns2:PrepCategory>
            <ns2:PrepOrderCode>453</ns2:PrepOrderCode>
          </ns2:Prep>
          <ns2:Prep>
            <ns2:PrepCategory>L</ns2:PrepCategory>
            <ns2:PrepOrderCode>G19</ns2:PrepOrderCode>
            <ns2:PrepManufacturer>RW</ns2:PrepManufacturer>
          </ns2:Prep>
          <ns2:Prep>
            <ns2:PrepCategory>L</ns2:PrepCategory>
            <ns2:PrepOrderCode>G19</ns2:PrepOrderCode>
            <ns2:PrepManufacturer>RW</ns2:PrepManufacturer>
          </ns2:Prep>
          <ns2:Prep>
            <ns2:PrepCategory>A</ns2:PrepCategory>
            <ns2:PrepOrderCode>CL</ns2:PrepOrderCode>
          </ns2:Prep>
        </ns2:OrderLineData>
      </ns2:OrderLine>
      <ns2:OrderLine>
        <ns2:LineGeneratedFully>F</ns2:LineGeneratedFully>
        <ns2:ProductType>Door</ns2:ProductType>
        <ns2:LineNumber>9</ns2:LineNumber>
        <ns2:Quantity>1</ns2:Quantity>
        <ns2:MarkNumber>
          <ns2:MarkID>109-02</ns2:MarkID>
          <ns2:Qty>1</ns2:Qty>
        </ns2:MarkNumber>
        <ns2:Weight>0</ns2:Weight>
        <ns2:OrderLineData>
          <ns2:Width>36.0000</ns2:Width>
          <ns2:Height>84.0000</ns2:Height>
          <ns2:Series>707</ns2:Series>
          <ns2:DrFaceType>F</ns2:DrFaceType>
          <ns2:DoorThickness>1.75</ns2:DoorThickness>
          <ns2:Bevel>A</ns2:Bevel>
          <ns2:DrEdge>N</ns2:DrEdge>
          <ns2:Astragal>
            <ns2:AstragalCode/>
          </ns2:Astragal>
          <ns2:Labeling>
            <ns2:Certifications/>
          </ns2:Labeling>
          <ns2:Gauge>18</ns2:Gauge>
          <ns2:Material>
            <ns2:MaterialType>CR</ns2:MaterialType>
          </ns2:Material>
          <ns2:Hand>R</ns2:Hand>
          <ns2:Prep>
            <ns2:PrepCategory>H</ns2:PrepCategory>
            <ns2:PrepOrderCode>453</ns2:PrepOrderCode>
          </ns2:Prep>
          <ns2:Prep>
            <ns2:PrepCategory>L</ns2:PrepCategory>
            <ns2:PrepOrderCode>G19</ns2:PrepOrderCode>
            <ns2:PrepManufacturer>RW</ns2:PrepManufacturer>
          </ns2:Prep>
          <ns2:Prep>
            <ns2:PrepCategory>L</ns2:PrepCategory>
            <ns2:PrepOrderCode>G19</ns2:PrepOrderCode>
            <ns2:PrepManufacturer>RW</ns2:PrepManufacturer>
          </ns2:Prep>
          <ns2:Prep>
            <ns2:PrepCategory>A</ns2:PrepCategory>
            <ns2:PrepOrderCode>CL</ns2:PrepOrderCode>
          </ns2:Prep>
        </ns2:OrderLineData>
      </ns2:OrderLine>
      <ns2:OrderLine>
        <ns2:LineGeneratedFully>F</ns2:LineGeneratedFully>
        <ns2:ProductType>Door</ns2:ProductType>
        <ns2:LineNumber>10</ns2:LineNumber>
        <ns2:Quantity>3</ns2:Quantity>
        <ns2:MarkNumber>
          <ns2:MarkID>112-01</ns2:MarkID>
          <ns2:Qty>1</ns2:Qty>
        </ns2:MarkNumber>
        <ns2:MarkNumber>
          <ns2:MarkID>117-01</ns2:MarkID>
          <ns2:Qty>1</ns2:Qty>
        </ns2:MarkNumber>
        <ns2:MarkNumber>
          <ns2:MarkID>130-01</ns2:MarkID>
          <ns2:Qty>1</ns2:Qty>
        </ns2:MarkNumber>
        <ns2:Weight>0</ns2:Weight>
        <ns2:OrderLineData>
          <ns2:Width>36.0000</ns2:Width>
          <ns2:Height>84.0000</ns2:Height>
          <ns2:Series>707</ns2:Series>
          <ns2:DrFaceType>F</ns2:DrFaceType>
          <ns2:DoorThickness>1.75</ns2:DoorThickness>
          <ns2:Bevel>A</ns2:Bevel>
          <ns2:DrEdge>N</ns2:DrEdge>
          <ns2:Astragal>
            <ns2:AstragalCode/>
          </ns2:Astragal>
          <ns2:Labeling>
            <ns2:Certifications/>
          </ns2:Labeling>
          <ns2:Gauge>18</ns2:Gauge>
          <ns2:Material>
            <ns2:MaterialType>CR</ns2:MaterialType>
          </ns2:Material>
          <ns2:Hand>L</ns2:Hand>
          <ns2:Prep>
            <ns2:PrepCategory>H</ns2:PrepCategory>
            <ns2:PrepOrderCode>453</ns2:PrepOrderCode>
          </ns2:Prep>
          <ns2:Prep>
            <ns2:PrepCategory>L</ns2:PrepCategory>
            <ns2:PrepOrderCode>G2A</ns2:PrepOrderCode>
            <ns2:PrepManufacturer>SA</ns2:PrepManufacturer>
            <ns2:PrepFunction>28-60-10G05</ns2:PrepFunction>
            <ns2:PrepTrim>LL</ns2:PrepTrim>
          </ns2:Prep>
          <ns2:Prep>
            <ns2:PrepCategory>A</ns2:PrepCategory>
            <ns2:PrepOrderCode>CL</ns2:PrepOrderCode>
          </ns2:Prep>
        </ns2:OrderLineData>
      </ns2:OrderLine>
      <ns2:OrderLine>
        <ns2:LineGeneratedFully>F</ns2:LineGeneratedFully>
        <ns2:ProductType>Door</ns2:ProductType>
        <ns2:LineNumber>11</ns2:LineNumber>
        <ns2:Quantity>1</ns2:Quantity>
        <ns2:MarkNumber>
          <ns2:MarkID>114-01</ns2:MarkID>
          <ns2:Qty>1</ns2:Qty>
        </ns2:MarkNumber>
        <ns2:Weight>0</ns2:Weight>
        <ns2:OrderLineData>
          <ns2:Width>36.0000</ns2:Width>
          <ns2:Height>84.0000</ns2:Height>
          <ns2:Series>707</ns2:Series>
          <ns2:DrFaceType>F</ns2:DrFaceType>
          <ns2:DoorThickness>1.75</ns2:DoorThickness>
          <ns2:Bevel>A</ns2:Bevel>
          <ns2:DrEdge>N</ns2:DrEdge>
          <ns2:Astragal>
            <ns2:AstragalCode/>
          </ns2:Astragal>
          <ns2:Labeling>
            <ns2:Certifications/>
          </ns2:Labeling>
          <ns2:Gauge>18</ns2:Gauge>
          <ns2:Material>
            <ns2:MaterialType>CR</ns2:MaterialType>
          </ns2:Material>
          <ns2:Hand>R</ns2:Hand>
          <ns2:Prep>
            <ns2:PrepCategory>H</ns2:PrepCategory>
            <ns2:PrepOrderCode>453</ns2:PrepOrderCode>
          </ns2:Prep>
          <ns2:Prep>
            <ns2:PrepCategory>L</ns2:PrepCategory>
            <ns2:PrepOrderCode>G2A</ns2:PrepOrderCode>
            <ns2:PrepManufacturer>SA</ns2:PrepManufacturer>
            <ns2:PrepFunction>28-60-10G05</ns2:PrepFunction>
            <ns2:PrepTrim>LL</ns2:PrepTrim>
          </ns2:Prep>
          <ns2:Prep>
            <ns2:PrepCategory>A</ns2:PrepCategory>
            <ns2:PrepOrderCode>CL</ns2:PrepOrderCode>
          </ns2:Prep>
          <ns2:AdditionalInformation>
            <ns2:SpecialInformation>60-485</ns2:SpecialInformation>
          </ns2:AdditionalInformation>
        </ns2:OrderLineData>
      </ns2:OrderLine>
      <ns2:OrderLine>
        <ns2:LineGeneratedFully>F</ns2:LineGeneratedFully>
        <ns2:ProductType>Door</ns2:ProductType>
        <ns2:LineNumber>12</ns2:LineNumber>
        <ns2:Quantity>1</ns2:Quantity>
        <ns2:MarkNumber>
          <ns2:MarkID>114-02</ns2:MarkID>
          <ns2:Qty>1</ns2:Qty>
        </ns2:MarkNumber>
        <ns2:Weight>0</ns2:Weight>
        <ns2:OrderLineData>
          <ns2:Width>36.0000</ns2:Width>
          <ns2:Height>84.0000</ns2:Height>
          <ns2:Series>707</ns2:Series>
          <ns2:DrFaceType>F</ns2:DrFaceType>
          <ns2:DoorThickness>1.75</ns2:DoorThickness>
          <ns2:Bevel>A</ns2:Bevel>
          <ns2:DrEdge>N</ns2:DrEdge>
          <ns2:Astragal>
            <ns2:AstragalCode/>
          </ns2:Astragal>
          <ns2:Labeling>
            <ns2:Certifications/>
          </ns2:Labeling>
          <ns2:Gauge>18</ns2:Gauge>
          <ns2:Material>
            <ns2:MaterialType>CR</ns2:MaterialType>
          </ns2:Material>
          <ns2:Hand>R</ns2:Hand>
          <ns2:Prep>
            <ns2:PrepCategory>H</ns2:PrepCategory>
            <ns2:PrepOrderCode>453</ns2:PrepOrderCode>
          </ns2:Prep>
          <ns2:Prep>
            <ns2:PrepCategory>L</ns2:PrepCategory>
            <ns2:PrepOrderCode>G2A</ns2:PrepOrderCode>
            <ns2:PrepManufacturer>SA</ns2:PrepManufacturer>
            <ns2:PrepFunction>28-60-10G05</ns2:PrepFunction>
            <ns2:PrepTrim>LL</ns2:PrepTrim>
          </ns2:Prep>
          <ns2:Prep>
            <ns2:PrepCategory>A</ns2:PrepCategory>
            <ns2:PrepOrderCode>CL</ns2:PrepOrderCode>
          </ns2:Prep>
          <ns2:AdditionalInformation>
            <ns2:SpecialInformation>60-485</ns2:SpecialInformation>
          </ns2:AdditionalInformation>
        </ns2:OrderLineData>
      </ns2:OrderLine>
      <ns2:OrderLine>
        <ns2:LineGeneratedFully>F</ns2:LineGeneratedFully>
        <ns2:ProductType>Door</ns2:ProductType>
        <ns2:LineNumber>13</ns2:LineNumber>
        <ns2:Quantity>1</ns2:Quantity>
        <ns2:MarkNumber>
          <ns2:MarkID>115-01</ns2:MarkID>
          <ns2:Qty>1</ns2:Qty>
        </ns2:MarkNumber>
        <ns2:Weight>0</ns2:Weight>
        <ns2:OrderLineData>
          <ns2:Width>36.0000</ns2:Width>
          <ns2:Height>84.0000</ns2:Height>
          <ns2:Series>707</ns2:Series>
          <ns2:DrFaceType>F</ns2:DrFaceType>
          <ns2:DoorThickness>1.75</ns2:DoorThickness>
          <ns2:Bevel>A</ns2:Bevel>
          <ns2:DrEdge>N</ns2:DrEdge>
          <ns2:Astragal>
            <ns2:AstragalCode/>
          </ns2:Astragal>
          <ns2:Labeling>
            <ns2:Certifications/>
          </ns2:Labeling>
          <ns2:Gauge>16</ns2:Gauge>
          <ns2:Material>
            <ns2:MaterialType>CR</ns2:MaterialType>
          </ns2:Material>
          <ns2:Hand>LR</ns2:Hand>
          <ns2:Prep>
            <ns2:PrepCategory>H</ns2:PrepCategory>
            <ns2:PrepOrderCode>453</ns2:PrepOrderCode>
          </ns2:Prep>
          <ns2:Prep>
            <ns2:PrepCategory>L</ns2:PrepCategory>
            <ns2:PrepOrderCode>G2A</ns2:PrepOrderCode>
            <ns2:PrepManufacturer>SA</ns2:PrepManufacturer>
            <ns2:PrepFunction>28-60-10G05</ns2:PrepFunction>
            <ns2:PrepTrim>LL</ns2:PrepTrim>
          </ns2:Prep>
          <ns2:Prep>
            <ns2:PrepCategory>A</ns2:PrepCategory>
            <ns2:PrepOrderCode>CL</ns2:PrepOrderCode>
          </ns2:Prep>
        </ns2:OrderLineData>
      </ns2:OrderLine>
      <ns2:OrderLine>
        <ns2:LineGeneratedFully>F</ns2:LineGeneratedFully>
        <ns2:ProductType>Door</ns2:ProductType>
        <ns2:LineNumber>14</ns2:LineNumber>
        <ns2:Quantity>1</ns2:Quantity>
        <ns2:MarkNumber>
          <ns2:MarkID>116-01</ns2:MarkID>
          <ns2:Qty>1</ns2:Qty>
        </ns2:MarkNumber>
        <ns2:Weight>0</ns2:Weight>
        <ns2:OrderLineData>
          <ns2:Width>42.0000</ns2:Width>
          <ns2:Height>84.0000</ns2:Height>
          <ns2:Series>707</ns2:Series>
          <ns2:DrFaceType>F</ns2:DrFaceType>
          <ns2:DoorThickness>1.75</ns2:DoorThickness>
          <ns2:Bevel>A</ns2:Bevel>
          <ns2:DrEdge>N</ns2:DrEdge>
          <ns2:Astragal>
            <ns2:AstragalCode/>
          </ns2:Astragal>
          <ns2:Labeling>
            <ns2:Certifications/>
          </ns2:Labeling>
          <ns2:Gauge>16</ns2:Gauge>
          <ns2:Material>
            <ns2:MaterialType>CR</ns2:MaterialType>
          </ns2:Material>
          <ns2:Hand>R</ns2:Hand>
          <ns2:Prep>
            <ns2:PrepCategory>H</ns2:PrepCategory>
            <ns2:PrepOrderCode>453</ns2:PrepOrderCode>
          </ns2:Prep>
          <ns2:Prep>
            <ns2:PrepCategory>L</ns2:PrepCategory>
            <ns2:PrepOrderCode>G2A</ns2:PrepOrderCode>
            <ns2:PrepManufacturer>SA</ns2:PrepManufacturer>
            <ns2:PrepFunction>28-60-10G05</ns2:PrepFunction>
            <ns2:PrepTrim>LL</ns2:PrepTrim>
          </ns2:Prep>
          <ns2:Prep>
            <ns2:PrepCategory>A</ns2:PrepCategory>
            <ns2:PrepOrderCode>CL</ns2:PrepOrderCode>
          </ns2:Prep>
          <ns2:AdditionalInformation>
            <ns2:SpecialInformation>60-485</ns2:SpecialInformation>
          </ns2:AdditionalInformation>
        </ns2:OrderLineData>
      </ns2:OrderLine>
      <ns2:OrderLine>
        <ns2:LineGeneratedFully>F</ns2:LineGeneratedFully>
        <ns2:ProductType>Door</ns2:ProductType>
        <ns2:LineNumber>15</ns2:LineNumber>
        <ns2:Quantity>1</ns2:Quantity>
        <ns2:MarkNumber>
          <ns2:MarkID>118-01</ns2:MarkID>
          <ns2:Qty>1</ns2:Qty>
        </ns2:MarkNumber>
        <ns2:Weight>0</ns2:Weight>
        <ns2:OrderLineData>
          <ns2:Width>42.0000</ns2:Width>
          <ns2:Height>84.0000</ns2:Height>
          <ns2:Series>707</ns2:Series>
          <ns2:DrFaceType>F</ns2:DrFaceType>
          <ns2:DoorThickness>1.75</ns2:DoorThickness>
          <ns2:Bevel>A</ns2:Bevel>
          <ns2:DrEdge>N</ns2:DrEdge>
          <ns2:Astragal>
            <ns2:AstragalCode/>
          </ns2:Astragal>
          <ns2:Labeling>
            <ns2:Certifications/>
          </ns2:Labeling>
          <ns2:Gauge>16</ns2:Gauge>
          <ns2:Material>
            <ns2:MaterialType>CR</ns2:MaterialType>
          </ns2:Material>
          <ns2:Hand>R</ns2:Hand>
          <ns2:Prep>
            <ns2:PrepCategory>H</ns2:PrepCategory>
            <ns2:PrepOrderCode>453</ns2:PrepOrderCode>
          </ns2:Prep>
          <ns2:Prep>
            <ns2:PrepCategory>L</ns2:PrepCategory>
            <ns2:PrepOrderCode>G2A</ns2:PrepOrderCode>
            <ns2:PrepManufacturer>SA</ns2:PrepManufacturer>
            <ns2:PrepFunction>28-60-10G05</ns2:PrepFunction>
            <ns2:PrepTrim>LL</ns2:PrepTrim>
          </ns2:Prep>
          <ns2:Prep>
            <ns2:PrepCategory>A</ns2:PrepCategory>
            <ns2:PrepOrderCode>CL</ns2:PrepOrderCode>
          </ns2:Prep>
          <ns2:AdditionalInformation>
            <ns2:SpecialInformation>60-485</ns2:SpecialInformation>
          </ns2:AdditionalInformation>
        </ns2:OrderLineData>
      </ns2:OrderLine>
      <ns2:OrderLine>
        <ns2:LineGeneratedFully>F</ns2:LineGeneratedFully>
        <ns2:ProductType>Door</ns2:ProductType>
        <ns2:LineNumber>16</ns2:LineNumber>
        <ns2:Quantity>1</ns2:Quantity>
        <ns2:MarkNumber>
          <ns2:MarkID>122-01</ns2:MarkID>
          <ns2:Qty>1</ns2:Qty>
        </ns2:MarkNumber>
        <ns2:Weight>0</ns2:Weight>
        <ns2:OrderLineData>
          <ns2:Width>36.0000</ns2:Width>
          <ns2:Height>84.0000</ns2:Height>
          <ns2:Series>707</ns2:Series>
          <ns2:DrFaceType>F</ns2:DrFaceType>
          <ns2:DoorThickness>1.75</ns2:DoorThickness>
          <ns2:Bevel>A</ns2:Bevel>
          <ns2:DrEdge>N</ns2:DrEdge>
          <ns2:Astragal>
            <ns2:AstragalCode/>
          </ns2:Astragal>
          <ns2:Labeling>
            <ns2:Certifications/>
          </ns2:Labeling>
          <ns2:Gauge>18</ns2:Gauge>
          <ns2:Material>
            <ns2:MaterialType>CR</ns2:MaterialType>
          </ns2:Material>
          <ns2:Hand>LR</ns2:Hand>
          <ns2:Prep>
            <ns2:PrepCategory>H</ns2:PrepCategory>
            <ns2:PrepOrderCode>453</ns2:PrepOrderCode>
          </ns2:Prep>
          <ns2:Prep>
            <ns2:PrepCategory>L</ns2:PrepCategory>
            <ns2:PrepOrderCode>G2A</ns2:PrepOrderCode>
            <ns2:PrepManufacturer>SA</ns2:PrepManufacturer>
            <ns2:PrepFunction>28-10U65</ns2:PrepFunction>
            <ns2:PrepTrim>LL</ns2:PrepTrim>
          </ns2:Prep>
          <ns2:Prep>
            <ns2:PrepCategory>A</ns2:PrepCategory>
            <ns2:PrepOrderCode>CL</ns2:PrepOrderCode>
          </ns2:Prep>
        </ns2:OrderLineData>
      </ns2:OrderLine>
      <ns2:OrderLine>
        <ns2:LineGeneratedFully>F</ns2:LineGeneratedFully>
        <ns2:ProductType>Door</ns2:ProductType>
        <ns2:LineNumber>17</ns2:LineNumber>
        <ns2:Quantity>1</ns2:Quantity>
        <ns2:MarkNumber>
          <ns2:MarkID>123-01</ns2:MarkID>
          <ns2:Qty>1</ns2:Qty>
        </ns2:MarkNumber>
        <ns2:Weight>0</ns2:Weight>
        <ns2:OrderLineData>
          <ns2:Width>36.0000</ns2:Width>
          <ns2:Height>84.0000</ns2:Height>
          <ns2:Series>707</ns2:Series>
          <ns2:DrFaceType>F</ns2:DrFaceType>
          <ns2:DoorThickness>1.75</ns2:DoorThickness>
          <ns2:Bevel>A</ns2:Bevel>
          <ns2:DrEdge>N</ns2:DrEdge>
          <ns2:Astragal>
            <ns2:AstragalCode/>
          </ns2:Astragal>
          <ns2:Labeling>
            <ns2:Certifications/>
          </ns2:Labeling>
          <ns2:Gauge>18</ns2:Gauge>
          <ns2:Material>
            <ns2:MaterialType>CR</ns2:MaterialType>
          </ns2:Material>
          <ns2:Hand>R</ns2:Hand>
          <ns2:Prep>
            <ns2:PrepCategory>H</ns2:PrepCategory>
            <ns2:PrepOrderCode>453</ns2:PrepOrderCode>
          </ns2:Prep>
          <ns2:Prep>
            <ns2:PrepCategory>L</ns2:PrepCategory>
            <ns2:PrepOrderCode>G2A</ns2:PrepOrderCode>
            <ns2:PrepManufacturer>SA</ns2:PrepManufacturer>
            <ns2:PrepFunction>28-60-10G05</ns2:PrepFunction>
            <ns2:PrepTrim>LL</ns2:PrepTrim>
          </ns2:Prep>
          <ns2:Prep>
            <ns2:PrepCategory>A</ns2:PrepCategory>
            <ns2:PrepOrderCode>CL</ns2:PrepOrderCode>
          </ns2:Prep>
        </ns2:OrderLineData>
      </ns2:OrderLine>
      <ns2:OrderLine>
        <ns2:LineGeneratedFully>F</ns2:LineGeneratedFully>
        <ns2:ProductType>Door</ns2:ProductType>
        <ns2:LineNumber>18</ns2:LineNumber>
        <ns2:Quantity>1</ns2:Quantity>
        <ns2:MarkNumber>
          <ns2:MarkID>124-01</ns2:MarkID>
          <ns2:Qty>1</ns2:Qty>
        </ns2:MarkNumber>
        <ns2:Weight>0</ns2:Weight>
        <ns2:OrderLineData>
          <ns2:Width>42.0000</ns2:Width>
          <ns2:Height>84.0000</ns2:Height>
          <ns2:Series>707</ns2:Series>
          <ns2:DrFaceType>F</ns2:DrFaceType>
          <ns2:DoorThickness>1.75</ns2:DoorThickness>
          <ns2:Bevel>A</ns2:Bevel>
          <ns2:DrEdge>N</ns2:DrEdge>
          <ns2:Astragal>
            <ns2:AstragalCode/>
          </ns2:Astragal>
          <ns2:Labeling>
            <ns2:Certifications/>
          </ns2:Labeling>
          <ns2:Gauge>16</ns2:Gauge>
          <ns2:Material>
            <ns2:MaterialType>CR</ns2:MaterialType>
          </ns2:Material>
          <ns2:Hand>LR</ns2:Hand>
          <ns2:Prep>
            <ns2:PrepCategory>H</ns2:PrepCategory>
            <ns2:PrepOrderCode>453</ns2:PrepOrderCode>
          </ns2:Prep>
          <ns2:Prep>
            <ns2:PrepCategory>L</ns2:PrepCategory>
            <ns2:PrepOrderCode>G2A</ns2:PrepOrderCode>
            <ns2:PrepManufacturer>SA</ns2:PrepManufacturer>
            <ns2:PrepFunction>28-60-10G05</ns2:PrepFunction>
            <ns2:PrepTrim>LL</ns2:PrepTrim>
          </ns2:Prep>
          <ns2:Prep>
            <ns2:PrepCategory>A</ns2:PrepCategory>
            <ns2:PrepOrderCode>CL</ns2:PrepOrderCode>
          </ns2:Prep>
          <ns2:AdditionalInformation>
            <ns2:SpecialInformation>60-485</ns2:SpecialInformation>
          </ns2:AdditionalInformation>
        </ns2:OrderLineData>
      </ns2:OrderLine>
      <ns2:OrderLine>
        <ns2:LineGeneratedFully>F</ns2:LineGeneratedFully>
        <ns2:ProductType>Door</ns2:ProductType>
        <ns2:LineNumber>19</ns2:LineNumber>
        <ns2:Quantity>1</ns2:Quantity>
        <ns2:MarkNumber>
          <ns2:MarkID>99-01</ns2:MarkID>
          <ns2:Qty>1</ns2:Qty>
        </ns2:MarkNumber>
        <ns2:Weight>0</ns2:Weight>
        <ns2:OrderLineData>
          <ns2:Width>36.0000</ns2:Width>
          <ns2:Height>84.0000</ns2:Height>
          <ns2:Series>707</ns2:Series>
          <ns2:DrFaceType>F</ns2:DrFaceType>
          <ns2:DoorThickness>1.75</ns2:DoorThickness>
          <ns2:Bevel>A</ns2:Bevel>
          <ns2:DrEdge>N</ns2:DrEdge>
          <ns2:Astragal>
            <ns2:AstragalCode/>
          </ns2:Astragal>
          <ns2:Labeling>
            <ns2:Certifications/>
          </ns2:Labeling>
          <ns2:Gauge>18</ns2:Gauge>
          <ns2:Material>
            <ns2:MaterialType>CR</ns2:MaterialType>
          </ns2:Material>
          <ns2:Hand>R</ns2:Hand>
          <ns2:Prep>
            <ns2:PrepCategory>H</ns2:PrepCategory>
            <ns2:PrepOrderCode>453</ns2:PrepOrderCode>
          </ns2:Prep>
          <ns2:Prep>
            <ns2:PrepCategory>L</ns2:PrepCategory>
            <ns2:PrepOrderCode>G2A</ns2:PrepOrderCode>
            <ns2:PrepManufacturer>SA</ns2:PrepManufacturer>
            <ns2:PrepFunction>28-10U15</ns2:PrepFunction>
            <ns2:PrepTrim>LL</ns2:PrepTrim>
          </ns2:Prep>
          <ns2:Prep>
            <ns2:PrepCategory>A</ns2:PrepCategory>
            <ns2:PrepOrderCode>CL</ns2:PrepOrderCode>
          </ns2:Prep>
          <ns2:AdditionalInformation>
            <ns2:SpecialInformation>420APKL36{36"w}</ns2:SpecialInformation>
          </ns2:AdditionalInformation>
        </ns2:OrderLineData>
      </ns2:OrderLine>
    </ns2:Order>
  </soap:Body>
</soap:Envelope>`;
    doorWidth = Number(document.forms.doorLock.dWidth.value);
    doorHeight = Number(document.forms.doorLock.dHeight.value);
    let x = document.getElementById('form_id');
    let doorType = document.forms.doorLock['door-type'].value;

    const {message, isValid} = validateDoorDimensions({doorType, doorWidth, doorHeight});
    if (!isValid) {
      alert(message);
      return false;
    }

    // convert door dimension values from inches to px
    doorWidth = doorWidth * 10;
    doorHeight = doorHeight * 10;
    two.clear();

    let parser = new DOMParser();
    let xmlDoc = parser.parseFromString(xml,"text/xml");
    if (xmlDoc.getElementsByTagName('ns2:OrderLine')[0].getElementsByTagName("ns2:ProductType")[0].textContent === "Door") {
        let context = document.getElementById('product');
        // let door_type = xmlDoc.getElementsByTagName('ns2:OrderLine')[0].getElementsByTagName("ns2:OrderLineData")[0].getElementsByTagName("ns2:DrFaceType")[0].textContent;
        
        /*let width = parseInt(xmlDoc.getElementsByTagName('ns2:OrderLine')[0].getElementsByTagName("ns2:OrderLineData")[0].getElementsByTagName("ns2:Width")[0].textContent);
        let height = parseInt(xmlDoc.getElementsByTagName('ns2:OrderLine')[0].getElementsByTagName("ns2:OrderLineData")[0].getElementsByTagName("ns2:Height")[0].textContent)*/

        // read door dimensions from the inputs
        switch(doorType) {
            case 'F': renderFDoor({event, doorWidth, doorHeight});
              break;
            case 'E8': renderE8Door(event, context, height, width);
              break;
            case '2PA': render2PADoor(event, context, doorHeight, doorWidth);
              break;
            case 'loadImage': loadImage(event, context, height, width);
              break;
        }
    }
}


let renderFDoor = ({event, doorWidth, doorHeight}) => {
  const x = Math.round(doorWidth / 2);
  const y = Math.round(doorHeight / 2);

  doorArea = two.makeRectangle(x, y, doorWidth, doorHeight);
  doorArea.linewidth= 2;
  doorArea.noFill();

  two.update();
};

let renderE8Door = (event, domElement, doorHeight, doorWidth)=>{
    let width = 400, height= 700;
    let newWidth = doorWidth * 10, newHeight = doorHeight * 10;
    // let newWidth = 100, newHeight = 100;
    // let two = new Two({ width, height }).appendTo(domElement);
    let xratio = 1;
    let yratio = 1;
    let x1,x2,y1,y2;
    if(newWidth > width){
        xratio = newWidth/width;
    } else {
        xratio = width/newWidth;
    }
    if(newHeight > height){
        yratio = newHeight/height;
    } else {
        yratio = height/newHeight;
    }

    x1 = 75 * xratio;
    y1 = 150 * yratio;
    x2 = 150 * xratio;
    y2 = 300 * yratio;

    if(x1 > newWidth || x2 > newWidth || y1 > newHeight || y2 > newHeight){
        noPreviewAvailable(two, xratio, yratio, event);
        return;
    }

    /* Door Area */
    let doorArea = two.makeRectangle(x1 , y1, x2, y2);
    doorArea.linewidth= 2;
    doorArea.noFill();
    let x = 45*xratio, y = 37.5*yratio;
    for(let index=0; index<4; index++){
        /* Outer Rectangles */
        
        x1 = x;
        x2 = 40 * xratio;
        y1 = y + (index*65*yratio);
        y2 = 55 * yratio;

        if(x1 > newWidth || x2 > newWidth || y1 > newHeight || y2 > newHeight){
            noPreviewAvailable(two, xratio, yratio, event);
            return;
        }

        let rect1 = two.makeRectangle(x1, y1, x2, y2);
        rect1.linewidth = 2;
        rect1.noFill();
        
        x1 = x+(60*xratio);
        x2 = 40 * xratio;
        y1 = y + (index*65*yratio);
        y2 = 55 * yratio;

        if(x1 > newWidth || x2 > newWidth || y1 > newHeight || y2 > newHeight){
            noPreviewAvailable(two, xratio, yratio, event);
            return;
        }

        let rect2 = two.makeRectangle(x1, y1, x2, y2);
        rect2.linewidth = 2;
        rect2.noFill();
        /* Inner Rectangles */
        
        x1 = x;
        x2 = 30 * xratio;
        y1 = y + (index * 65 * yratio);
        y2 = 45 * yratio;

        if(x1 > newWidth || x2 > newWidth || y1 > newHeight || y2 > newHeight){
            noPreviewAvailable(two, xratio, yratio, event);
            return;
        }
        
        let rect3 = two.makeRectangle(x1 ,y1, x2, y2);
        rect3.linewidth = 2;
        rect3.noFill();
        
        x1 = x+(60*xratio);
        x2 = 30 * xratio;
        y1 = y + (index*65*yratio);
        y2 = 45 * yratio;

        if(x1 > newWidth || x2 > newWidth || y1 > newHeight || y2 > newHeight){
            noPreviewAvailable(two, xratio, yratio, event);
            return;
        }


        let rect4 = two.makeRectangle(x1, y1, x2, y2);
        rect4.linewidth = 2;
        rect4.noFill();

        /* Corner lines */
                
        x1 = x - (40*xratio)/2;
        x2 = x - (30*xratio)/2;
        y1 = (y + (index*65*yratio)) - 55*yratio/2;
        y2 = (y + (index*65*yratio)) - 45*yratio/2;

        if(x1 > newWidth || x2 > newWidth || y1 > newHeight || y2 > newHeight){
            noPreviewAvailable(two, xratio, yratio, event);
            return;
        }

        let cl1 = two.makeLine(x1, y1, x2, y2);
        cl1.linewidth = 2;
        cl1.noFill();

        x1 = x + (40*xratio)/2;
        y1 = (y + (index*65*yratio)) + 55*yratio/2;
        x2 = x + (30*xratio)/2;
        y2 = (y + (index*65*yratio)) + 45*yratio/2;

        if(x1 > newWidth || x2 > newWidth || y1 > newHeight || y2 > newHeight){
            noPreviewAvailable(two, xratio, yratio, event);
            return;
        }

        let cl2 = two.makeLine(x1, y1, x2, y2);
        cl2.linewidth = 2;
        cl2.noFill();

        x1 = x - (40*xratio)/2;
        y1 = (y + (index*65*yratio)) + 55*yratio/2;
        x2 = x - (30*xratio)/2;
        y2 = (y + (index*65*yratio)) + 45*yratio/2;

        if(x1 > newWidth || x2 > newWidth || y1 > newHeight || y2 > newHeight){
            noPreviewAvailable(two, xratio, yratio, event);
            return;
        }


        let cl3 = two.makeLine(x1, y1, x2, y2);
        cl3.linewidth = 2;
        cl3.noFill();

        x1 = x + (40*xratio)/2;
        y1 = (y + (index*65*yratio)) - 55*yratio/2;
        x2 = x + (30*xratio)/2;
        y2 = (y + (index*65*yratio)) - 45*yratio/2;

        if(x1 > newWidth || x2 > newWidth || y1 > newHeight || y2 > newHeight){
            noPreviewAvailable(two, xratio, yratio, event);
            return;
        }

        let cl4 = two.makeLine(x1, y1, x2, y2);
        cl4.linewidth = 2;
        cl4.noFill();

        x1 = x + (60*xratio) - (40*xratio)/2;
        y1 = (y + (index*65*yratio)) - 55*yratio/2;
        x2 = x + (60*xratio) - (30*xratio)/2;
        y2 = (y + (index*65*yratio)) - 45*yratio/2;

        if(x1 > newWidth || x2 > newWidth || y1 > newHeight || y2 > newHeight){
            noPreviewAvailable(two, xratio, yratio, event);
            return;
        }

        let cl5 = two.makeLine(x1, y1, x2, y2);
        cl5.linewidth = 2;
        cl5.noFill();

        x1 = x + (60*xratio) + (40*xratio)/2;
        y1 = (y + (index*65*yratio)) + 55*yratio/2;
        x2 = x + (60*xratio) + (30*xratio)/2;
        y2 = (y + (index*65*yratio)) + 45*yratio/2;

        if(x1 > newWidth || x2 > newWidth || y1 > newHeight || y2 > newHeight){
            noPreviewAvailable(two, xratio, yratio, event);
            return;
        }

        let cl6 = two.makeLine(x1, y1, x2, y2);
        cl6.linewidth = 2;
        cl6.noFill();
        
        x1 = x + (60*xratio) - (40*xratio)/2;
        y1 = (y + (index*65*yratio)) + 55*yratio/2;
        x2 = x + (60*xratio) - (30*xratio)/2;
        y2 = (y + (index*65*yratio)) + 45*yratio/2;

        if(x1 > newWidth || x2 > newWidth || y1 > newHeight || y2 > newHeight){
            noPreviewAvailable(two, xratio, yratio, event);
            return;
        }

        let cl7 = two.makeLine(x1, y1, x2, y2);
        cl7.linewidth = 2;
        cl7.noFill();
        
        x1 = x + (60*xratio) + (40*xratio)/2;
        y1 = (y + (index*65*yratio)) - 55*yratio/2;
        x2 = x + (60*xratio) + (30*xratio)/2;
        y2 = (y + (index*65*yratio)) - 45*yratio/2;

        if(x1 > newWidth || x2 > newWidth || y1 > newHeight || y2 > newHeight){
            noPreviewAvailable(two, xratio, yratio, event);
            return;
        }

        let cl8 = two.makeLine(x1, y1, x2, y2);
        cl8.linewidth = 2;
        cl8.noFill();
    }
    event.preventDefault();
    two.update();
}

let render2PADoor = (event, domElement, doorHeight, doorWidth) =>{
    let width = 400, height= 700;
    let newWidth = doorWidth, newHeight = doorHeight;
    // let newWidth = 100, newHeight = 100;
    // var two = new Two({ width, height }).appendTo(domElement);
    let xratio = 1;
    let yratio = 1;
    let x1,x2,x3,x4,x5,x6,y1,y2,y3,y4,y5,y6;
    if(newWidth > width){
        xratio = newWidth/width;
    } else {
        xratio = width/newWidth;
    }
    if(newHeight > height){
        yratio = newHeight/height;
    } else {
        yratio = height/newHeight;
    }

    x1 = 87*xratio;
    y1 = 175*yratio;
    x2 = 175*xratio;
    y2 = 350*yratio;
    console.log(x1,y1,x2,y2);

    if(x1 > newWidth || x2 > newWidth || y1 > newHeight || y2 > newHeight){
        noPreviewAvailable(two, xratio, yratio, event);
        return;
    }

    doorArea = two.makeRectangle(x1,y1,x2,y2);
    doorArea.linewidth = 2;
    doorArea.noFill();
    // rectImage.image = img;

    /* Curves */
    x1 = 50*xratio + 10;
    y1 = 15*yratio + 30;
    x2 = 60*xratio + 10;
    y2 = 12.5*yratio + 30;
    x3 = 70*xratio + 10;
    y3 = 11*yratio + 30;
    x4 = 80*xratio + 10;
    y4 = 11*yratio + 30;
    x5 = 90*xratio + 10;
    y5 = 12.5*yratio + 30;
    x6 = 100*xratio + 10;
    y6 = 15*yratio + 30;
    
    if(x1 > newWidth || x2 > newWidth || x3 > newWidth || x4 > newWidth || x5 > newWidth || x6 > newWidth ||
        y1 > newHeight || y2 > newHeight || y3 > newHeight || y4 > newHeight || y5 > newHeight || y6 > newHeight){
        noPreviewAvailable(two, xratio, yratio, event);
        return;
    }
    
    var curve = two.makeCurve(x1,y1,x2,y2,x3,y3,x4,y4,x5,y5,x6,y6, true);
    curve.linewidth = 4;
    curve.scale = 2;
    curve.noFill();
    
    x1 = 55*xratio + 10;
    y1 = 19*yratio + 30;
    x2 = 65*xratio + 10;
    y2 = 16.8*yratio + 30;
    x3 = 75*xratio + 10;
    y3 = 16*yratio + 30;
    x4 = 85*xratio + 10;
    y4 = 16.8*yratio + 30;
    x5 = 95*xratio + 10;
    y5 = 19*yratio + 30;

    if(x1 > newWidth || x2 > newWidth || x3 > newWidth || x4 > newWidth || x5 > newWidth || x6 > newWidth ||
        y1 > newHeight || y2 > newHeight || y3 > newHeight || y4 > newHeight || y5 > newHeight || y6 > newHeight){
        noPreviewAvailable(two, xratio, yratio, event);
        return;
    }
    var curve1 = two.makeCurve(x1,y1,x2,y2,x3,y3,x4,y4,x5,y5, true);
    curve1.linewidth = 1;
    curve1.scale = 2;
    curve1.noFill();

    x1 = 57.5*xratio + 10;
    y1 = 24.5*yratio + 30;
    x2 = 70*xratio + 10;
    y2 = 22.5*yratio + 30;
    x3 = 80*xratio + 10;
    y3 = 22.5*yratio + 30;
    x4 = 92.5*xratio + 10;
    y4 = 24.5*yratio + 30;

    if(x1 > newWidth || x2 > newWidth || x3 > newWidth || x4 > newWidth || x5 > newWidth || x6 > newWidth ||
        y1 > newHeight || y2 > newHeight || y3 > newHeight || y4 > newHeight || y5 > newHeight || y6 > newHeight){
        noPreviewAvailable(two, xratio, yratio, event);
        return;
    }
    var curve2 = two.makeCurve(x1,y1,x2,y2,x3,y3,x4,y4, true);
    curve2.linewidth = 2;
    curve2.scale = 2;
    curve2.noFill();
    
    /* Lines */
    x1 = 27*xratio + 10;
    y1 = 15*yratio + 29;
    x2 = 28*xratio + 10;
    y2 = 164*yratio + 30;
    
    if(x1 > newWidth || x2 > newWidth || y1 > newHeight || y2 > newHeight){
        noPreviewAvailable(two, xratio, yratio, event);
        return;
    }
    
    var line = two.makeLine(x1, y1, x2, y2);
    line.linewidth = 8;
    line.stroke = "black";
    
    x1 = 123*xratio + 10;
    y1 = 15*yratio + 29;
    x2 = 122*xratio + 10;
    y2 = 164*yratio + 30;
    
    if(x1 > newWidth || x2 > newWidth || y1 > newHeight || y2 > newHeight){
        noPreviewAvailable(two, xratio, yratio, event);
        return;
    }

    var line1 = two.makeLine(x1, y1, x2, y2);
    line1.linewidth = 8;
    line1.stroke = "black";
    
    x1 = 25*xratio + 10;
    y1 = 161*yratio + 30;
    x2 = 125*xratio + 10;
    y2 = 161*yratio + 30;
    
    if(x1 > newWidth || x2 > newWidth || y1 > newHeight || y2 > newHeight){
        noPreviewAvailable(two, xratio, yratio, event);
        return;
    }
    
    var line3 = two.makeLine(x1, y1, x2, y2);
    line3.linewidth = 8;
    line3.stroke = "black";

    x1 = 33*xratio + 10;
    y1 = 20*yratio + 30;
    x2 = 33*xratio + 10;
    y2 = 156*yratio + 30;
    
    if(x1 > newWidth || x2 > newWidth || y1 > newHeight || y2 > newHeight){
        noPreviewAvailable(two, xratio, yratio, event);
        return;
    }

    var line4 = two.makeLine(x1, y1, x2, y2);
    line4.linewidth = 2;
    line4.stroke = "black";

    x1 = 117*xratio + 10;
    y1 = 18*yratio + 30;
    x2 = 116*xratio + 10;
    y2 = 156*yratio + 30;
    
    if(x1 > newWidth || x2 > newWidth || y1 > newHeight || y2 > newHeight){
        noPreviewAvailable(two, xratio, yratio, event);
        return;
    }

    var line5 = two.makeLine(x1, y1, x2, y2);
    line5.linewidth = 2;
    line5.stroke = "black";

    x1 = 33*xratio + 10.2;
    y1 = 156*yratio + 30;
    x2 = 116*xratio + 11;
    y2 = 156*yratio + 30;
    
    if(x1 > newWidth || x2 > newWidth || y1 > newHeight || y2 > newHeight){
        noPreviewAvailable(two, xratio, yratio, event);
        return;
    }

    var line6 = two.makeLine(x1, y1, x2, y2);
    line6.linewidth = 2;
    line6.stroke = "black";

    x1 = 42*xratio + 10;
    y1 = 24*yratio + 30;
    x2 = 42*xratio + 10;
    y2 = 149*yratio + 29;
    
    if(x1 > newWidth || x2 > newWidth || y1 > newHeight || y2 > newHeight){
        noPreviewAvailable(two, xratio, yratio, event);
        return;
    }

    var line7 = two.makeLine(x1, y1, x2, y2);
    line7.linewidth = 4;
    line7.stroke = "black";
    
    x1 = 108.5*xratio + 10;
    y1 = 24*yratio + 30;
    x2 = 108.5*xratio + 10;
    y2 = 149*yratio + 29;
    
    if(x1 > newWidth || x2 > newWidth || y1 > newHeight || y2 > newHeight){
        noPreviewAvailable(two, xratio, yratio, event);
        return;
    }

    var line8 = two.makeLine(x1, y1, x2, y2);
    line8.linewidth = 4;
    line8.stroke = "black";
    
    x1 = 42.5*xratio + 10;
    y1 = 147.5*yratio + 30;
    x2 = 108.5*xratio + 10;
    y2 = 147.5*yratio + 30;
    
    if(x1 > newWidth || x2 > newWidth || y1 > newHeight || y2 > newHeight){
        noPreviewAvailable(two, xratio, yratio, event);
        return;
    }

    var line9 = two.makeLine(x1, y1, x2, y2);
    line9.linewidth = 4;
    line9.stroke = "black";

    /* Corner lines */
    
    x1 = 28*xratio + 10;
    y1 = 16*yratio + 30;
    x2 = 41.5*xratio + 10;
    y2 = 26*yratio + 30;
    
    if(x1 > newWidth || x2 > newWidth || y1 > newHeight || y2 > newHeight){
        noPreviewAvailable(two, xratio, yratio, event);
        return;
    }

    var cl1 = two.makeLine(x1, y1, x2, y2);
    cl1.linewidth = 3;
    cl1.stroke = "black";

    x1 = 122*xratio + 10;
    y1 = 16*yratio + 30;
    x2 = 108.5*xratio + 10;
    y2 = 26*yratio + 30;
    
    if(x1 > newWidth || x2 > newWidth || y1 > newHeight || y2 > newHeight){
        noPreviewAvailable(two, xratio, yratio, event);
        return;
    }

    var cl2 = two.makeLine(x1, y1, x2, y2);
    cl2.linewidth = 3;
    cl2.stroke = "black";

    x1 = 28*xratio + 10;
    y1 = 161*yratio + 30;
    x2 = 42.5*xratio + 10;
    y2 = 147.5*yratio + 30;
    
    if(x1 > newWidth || x2 > newWidth || y1 > newHeight || y2 > newHeight){
        noPreviewAvailable(two, xratio, yratio, event);
        return;
    }

    var cl3 = two.makeLine(x1, y1, x2, y2);
    cl3.linewidth = 3;
    cl3.stroke = "black";

    x1 = 123*xratio + 10;
    y1 = 161*yratio + 30;
    x2 = 108*xratio + 10;
    y2 = 148*yratio + 30;
    
    if(x1 > newWidth || x2 > newWidth || y1 > newHeight || y2 > newHeight){
        noPreviewAvailable(two, xratio, yratio, event);
        return;
    }

    var cl4 = two.makeLine(x1, y1, x2, y2);
    cl4.linewidth = 3;
    cl4.stroke = "black";

    /* Rectangles */
    x1 = 75*xratio + 10;
    y1 = 235*yratio + 40;
    x2 = 95*xratio;
    y2 = 95*yratio;
    
    if(x1 > newWidth || x2 > newWidth || y1 > newHeight || y2 > newHeight){
        noPreviewAvailable(two, xratio, yratio, event);
        return;
    }

    var rect = two.makeRectangle(x1, y1, x2, y2);
    rect.linewidth = 8;
    rect.noFill();

    x1 = 75*xratio + 10;
    y1 = 235*yratio + 40;
    x2 = 85*xratio;
    y2 = 85*yratio;
    
    if(x1 > newWidth || x2 > newWidth || y1 > newHeight || y2 > newHeight){
        noPreviewAvailable(two, xratio, yratio, event);
        return;
    }

    var rect1 = two.makeRectangle(x1, y1, x2, y2);
    rect1.linewidth = 2;
    rect1.noFill();
    
    x1 = 75*xratio + 10;
    y1 = 235*yratio + 40;
    x2 = 68*xratio + 10;
    y2 = 74*yratio;
    
    if(x1 > newWidth || x2 > newWidth || y1 > newHeight || y2 > newHeight){
        noPreviewAvailable(two, xratio, yratio, event);
        return;
    }

    var rect2 = two.makeRectangle(x1, y1, x2, y2);
    rect2.linewidth = 3;
    rect2.noFill();
    
    // two.update();
    // var star = two.makeRectangle(86, 239, 170, 30);
    // var texture = new Two.Texture('./images/RimExitDevice.png')
    
    
    // // Textures fill as patterns on any Two.Path
    // star.fill = texture;
    // star.linewidth = 0;
    // texture.scale = 0.0985;
    event.preventDefault();
    two.update();
    // return two.appendTo(domElement);
}


let noPreviewAvailable = (two, xratio, yratio, event)=>{
    two.clear();
    /* Door Area */
    let doorArea = two.makeRectangle(100,150, 200,300);
    doorArea.linewidth= 2;
    doorArea.noFill();
    var styles = {
        size: 18,
        family: 'Lato',
        color: "#333"
      } 
    var text = two.makeText("No preview available", 100, 150, styles);   
    two.update();
    event.preventDefault();
}

let addHardware = event => {
  event.preventDefault();

  let hardware_type = document.getElementById("selectHW").value;

  /*
  let tPos = Number(document.forms.hw.tPos.value);
  let lPos = Number(document.forms.hw.lPos.value);
  */

  // TODO: disable the validation for now
  /*
  const {isValid, message} = validateLock(hardware_type, tPos, lPos);
  if (!isValid) {
    alert(message);
    return false;
  }
  */
 
  /*
  tPos = tPos * 10;
  lPos = lPos * 10;
  */
  switch(hardware_type) {
      case 'RimExitDevice': 
        RimExitDevice({event, tPos, lPos});
        break;
      case 'SurfaceVerticalRod': 
        SurfaceVerticalRod();
        break;
      case 'SurfaceVerticalRodwithLBR': 
        SurfaceVerticalRodwithLBR(event, context);
        break;
      case 'ConcealedVerticalRodwithLBR': 
        ConcealedVerticalRodwithLBR(event, context);
        break;
      case 'AuxiliaryLock': 
        DrawAuxiliaryLock(event, tPos, lPos);
        break;
  }
}

function validateLock(hardware_type, tPos, lPos) {
  let message = '';
  let isValid = true;

  if (!hardware_type) {
    message = "Please select the hardware";
    isValid = false;
  } else if (!tPos || Number.isNaN(tPos)) {
    message = "Please provide the top position of the lock";
    isValid = false;
  } else  if (!lPos || Number.isNaN(lPos)) {
    message = "Please provide the left position of the lock";
    isValid = false;
  } else {
    const doorType = document.forms.doorLock['door-type'].value;

    if (hardware_type === 'AuxiliaryLock') {
      if (doorType === 'F') {
        // const doorHeight = Number(document.getElementById("dHeight").value);
        // const doorWidth = Number(document.getElementById("dWidth").value);

        if (tPos * 10 > doorHeight - AUXLOCKRADIUS) {
          message = "Please provide the valid top position of the lock";
          isValid = false;
        } else if (lPos * 10 > doorWidth - AUXLOCKRADIUS) {
          message = "Please provide the valid left position of the lock";
          isValid = false;
        }
      } else if (doorType === '2PA') {
        if (tPos * 10 > doorArea.height - AUXLOCKRADIUS) {
          message = "Please provide the valid top position of the lock";
          isValid = false;
        } else if (lPos * 10 > doorArea.width - AUXLOCKRADIUS) {
          message = "Please provide the valid left position of the lock";
          isValid = false;
        }
      }
    } else if (hardware_type === "SurfaceVerticalRod") {
      if (doorType === 'F') {
        const calcTPos = doorHeight * .85; // should not exceed, 80 percent of the door height

        if (tPos * 10 > calcTPos) {
          message = "Please provide the valid top position of the lock";
          isValid = false;
        } else if (lPos > 5) {
          message = "Please provide the valid left position of the lock";
          isValid = false;
        }
      } else if (doorType === '2PA') {

        const calcTPos = doorHeight * .90; // should not exceed, 80 percent of the door height

        if (tPos * 10 > calcTPos) {
          message = "Please provide the valid top position of the lock";
          isValid = false;
        } else if (lPos > 5) {
          message = "Please provide the valid left position of the lock";
          isValid = false;
        }
      }
    }
  }
  
  return {message, isValid};
}

let RimExitDevice = ({event, tPos, lPos}) => {
  drawRImExitDevice({event, tPos, lPos});
  /*let width = 400, height= 700;
    var two = new Two({
      // type: Two.Types.canvas,
      fullscreen: true,
      autostart: true
    }).appendTo(context);
    
    var star = two.makeRectangle(85, 265, 170, 50);
    var texture = new Two.Texture('./images/RimExitDevice.png')
    
    
    // Textures fill as patterns on any Two.Path
    star.fill = texture;
    star.linewidth = 0;
    texture.scale = 0.109;
    
    two.update();*/
    
    /*
    // Don't forget to tell two to render everything
    // to the screen
    const group = two.makeGroup(rect1, rect2, rect3, path1);
    // group.scale = 0.5;
    */
   /*
    const group = two.makeGroup(firstRect, secRect, bigRect);
    two.update();
    */
};

/**
 * @description: this will create the horizontal rim exit device
 * @param: browser event, top, left gap from the door's edges
 * @return: object having 
 */
function drawRImExitDevice({event, tPos, lPos}) {
  const margin = lPos;

  const {width: doorWidth} = doorArea; // instead of reading calculated door width, get it from the rendered door

  const exitDeviceWidth = doorWidth - margin - margin; // after margin

  const {firstSmBar, secSmBar, smBarWidth, smBarHeight} = drawSmallVerticalBars({exitDeviceWidth, tPos, lPos});

  // const smBarWidth = Math.round(exitDeviceWidth * 2.5 / 100); //10 2.5% of wrapper width
  // const smBarHeight = Math.round(exitDeviceWidth * 11.35 / 100); // 11.75% of wrapper width

  // /* draw first rect */
  // const firstRectX = Math.round(margin + smBarWidth / 2);
  // const firstRectY = Math.round(tPos + smBarHeight / 2);
  // const firstRect = two.makeRectangle(firstRectX, firstRectY, smBarWidth, smBarHeight);

  // /* draw second rect */
  // const secRectX = firstRectX + smBarWidth;
  // const secRect = two.makeRectangle(secRectX, firstRectY, smBarWidth, smBarHeight);

  /* draw big rect */
  const bigRectW = Math.round(exitDeviceWidth * 95 / 100); // 95% of the drawing area //Math.round(doorWidth - (margin * 2) - (smBarWidth * 2));
  const bigRectX = Math.round((doorWidth + margin * 0.75) / 2); //Math.round((exitDeviceWidth - smBarWidth * 2) / 2 + smBarWidth * 3);
  const bigRetY = Math.round(tPos + (exitDeviceWidth * 11.35 / 100) / 2); //Math.round(INIT_PT + (smBarHeight / 2));
  const bigRectH = Math.round(exitDeviceWidth * 7.96 / 100); // 7.96% of drawing area // Math.round(smBarHeight * 0.7);
  // const bigRect = two.makeRectangle(bigRectX, bigRetY, bigRectW, bigRectH);
  
  /* first horrizontal line */
  const fLineY1 = tPos + smBarHeight * 0.17;
  const fLineY2 = tPos + smBarHeight * 0.83;
  const fLine = two.makeLine(margin+smBarWidth * 2, fLineY1, margin+smBarWidth * 2 + bigRectW, fLineY1);
  const sLine = two.makeLine(margin+smBarWidth * 2, fLineY2, margin+smBarWidth * 2 + bigRectW, fLineY2);

  /* draw path */
  const x1 = Math.round(doorWidth - margin - ((doorWidth * 10.50) / 100)); //Math.round(doorWidth - margin - (bigRectH + bigRectH * 0.33));
  const y1 = fLineY1; //tPos+3; //Math.round((tPos + smBarHeight * 0.3)) - 5;

  const x2 = Math.round(doorWidth - margin - ((doorWidth * 7.70) / 100)); // Math.round(doorWidth - margin - bigRectH + 5);
  const y2 = Math.round(tPos - (bigRectH + bigRectH * 0.25));

  const x3 = doorWidth - margin;
  const y3 = y2;

  const x4 = x3;
  const y4 = Math.round(y2 + bigRectH * 4);

  const x5 = x2;
  const y5 = y4;

  const x6 = x1;
  const y6 = fLineY2; //y1 + bigRectH;

  const openPath = two.makePath(
    x1, y1,
    x2, y2,
    x3, y3,
    // x4, y4,
    // x5, y5,
    // x6, y6,
    true
  );
  const newLine = two.makeLine(x3, y3, x4, y4);
  // const newLine2 = two.makeLine(x4, y4, x5, y5);
  // const newLine3 = two.makeLine(x5, y5, x6, y6);
  const openPath2 = two.makePath(
    x4, y4,
    x5, y5,
    x6, y6,
    true
  );
  // const group = two.makeGroup(firstRect, secRect);
  two.update();
  return {x2, y2, x3, x4, y4};
}

function drawSmallVerticalBars({exitDeviceWidth, tPos, lPos}) {
  const smBarWidth = Math.round(exitDeviceWidth * 2.6 / 100); // 2.6% of of exit device width
  const smBarHeight = Math.round(exitDeviceWidth * 11.26 / 100); // 11.26% of exit device width

  /* draw first rect */
  const smBarCenerX = Math.round(lPos + smBarWidth / 2);
  const smBarCenterY = Math.round(tPos + smBarHeight / 2);
  const firstSmBar = two.makeRectangle(smBarCenerX, smBarCenterY, smBarWidth, smBarHeight);

  /* draw second rect */
  const secSmBarCenterX = smBarCenerX + smBarWidth;
  const secSmBar = two.makeRectangle(secSmBarCenterX, smBarCenterY, smBarWidth, smBarHeight);

  two.update();
  
  return {firstSmBar, secSmBar, smBarWidth, smBarHeight};
}

let DrawAuxiliaryLock = (event, tPos, lPos) => {
  let sRadius = Math.round(AUXLOCKRADIUS / 4);

  const bCircle = two.makeCircle(lPos, tPos, AUXLOCKRADIUS);
  const sCircle = two.makeCircle(lPos, tPos, sRadius);

  auxLockInstance = two.makeGroup(bCircle, sCircle);

  two.update();
};

/*function drawSmallRect({width, height, margin, init_pt, twoRef}) {
  const rect = new DrawRect({width, height, margin, init_pt});
  const {x, y} = rect.calcCenterPt();
  return twoRef(x, y, width, height);
}

class DrawRect {
  constructor({width, height, margin, init_pt}) {
    this.width = width;
    this.height = height;
    this.margin = margin;
    this.init_pt = init_pt;
  }
  calX() {
    return this.margin + (this.width / 2)
  }
  calY() {
    return this.init_pt + (this.height / 2);
  }
  calcCenterPt() {
    return {x: this.calX(), y: this.calY()};
  }
}*/

let SurfaceVerticalRod = () => {
  // let doorType = document.getElementById('door').value;
  // if (doorType === 'F') {
  //   tPos = Math.round(doorArea.height * 0.48);
  // } else if (doorType === '2PA') {

  // tPos is the vertical position of the rim exit device

  const centerX1 = 0;
  // }

  // x2, y2, x3 are points of right base (path)
  const {x2, y2, x3, x4, y4} = drawRImExitDevice();

  const {barFirstPt, barThirdPt, barY2, barHeight, upperRod} = drawUpperRod({x2, y2, x3});
  
  const {upperBarSupport, centerX, baseWidth, baseRadius, baseHeight} = drawUpperBarSupport({x2, y2, x3, barY2, barHeight});

  const {lowerRod, lowerBarHt} = drawLowerRod({barFirstPt, barThirdPt, y4});

  const lowerCircularRect = drawLowerBarSupport({centerX, baseWidth, baseHeight, baseRadius, lowerBarHt});
  // const uRod = 
  /*let width = 400, height= 700;
    var two = new Two({
      // type: Two.Types.canvas,
      fullscreen: true,
      autostart: true
    }).appendTo(context);
    
    var star = two.makeRectangle(87, 270, 175, 320);
    var texture = new Two.Texture('./images/SurfaceVerticalRod.png')
    
    
    // Textures fill as patterns on any Two.Path
    star.fill = texture;
    star.linewidth = 0;
    texture.scale = 0.109;
    
    event.preventDefault();*/
    two.update();
}

// x2, y2, x3 are points of right base (path)
function drawUpperBarSupport({x2, barY2, x3, barHeight}) {
  const x = x2 + (x3 - x2) / 2;
  const height = Math.round(barHeight * .2130);
  const y = barY2 + height; // 2" below the bar edge
  const width = Math.round(barHeight * .1270);
  const radius = Math.round(height * .15);

  const upperBarSupport = two.makeRoundedRectangle(x, y, width, height, radius);
  two.update();
  return {
    upperBarSupport,
    centerX: x,
    baseWidth: width,
    baseRadius: radius,
    baseHeight: height
  }
}

function drawLowerBarSupport({centerX, baseWidth, baseHeight, baseRadius, lowerBarHt}) {
  const x = centerX;
  const y = Math.round(lowerBarHt - 20 - (baseHeight / 2)); // 2" below the bar edge
  const width = baseWidth;
  const height = baseHeight;
  const radius = baseRadius;

  const upperBarSupport = two.makeRoundedRectangle(x, y, width, height, radius);
  two.update();
}

// x2, y2, x3 are points of right base (path)
function drawUpperRod({x2, y2, x3}) {
  const uPathX1 = Math.round(x2 + ((x3 - x2) * (1/3)));
  const uPathY1 = y2;
  
  const uPathX2 = uPathX1;
  const uPathY2 = 10;

  const uPathX3 = uPathX1 + Math.round((x3 - x2) * (1/3));
  const uPathY3 = 10;

  const uPathX4 = uPathX1 + Math.round((x3 - x2) * (1/3));
  const uPathY4 = uPathY1;

  if (uPathY2 < 0) {
    uPathY2 = - (uPathY2);
  }
  const upperRod = two.makePath(
    uPathX1, uPathY1,
    uPathX2, uPathY2,
    uPathX3, uPathY3,
    uPathX4, uPathY4,
    true
  );

  return {
    barFirstPt: uPathX1,
    barHeight: uPathY1 - uPathY2,
    barThirdPt: uPathX3,
    barY2: uPathY2,
    upperRod
  }
}

// x2, y2, x3 are points of right base (path)
function drawLowerRod({barFirstPt, barThirdPt, y4}) {
  const x1 = barFirstPt;
  const y1 = y4;
  
  const x2 = barFirstPt;
  const y2 = doorHeight - 10;

  const x3 = barThirdPt;
  const y3 = y2;

  const x4 = barThirdPt;
  const ly4 = y1;

  if (y2 < 0) {
    y2 = - (y2);
  }
  const lowerBar = two.makePath(
    x1, y1,
    x2, y2,
    x3, y3,
    x4, ly4,
    true
  );

  return {
    lowerBar,
    lowerBarHt: y2
  }
}


let SurfaceVerticalRodwithLBR = (event, context)=>{
  let width = 400, height= 700;
    var two = new Two({
      // type: Two.Types.canvas,
      fullscreen: true,
      autostart: true
    }).appendTo(context);
    
    var star = two.makeRectangle(85, 265, 170, 400);
    var texture = new Two.Texture('./images/SurfaceVerticalRodwithLBR.png')
    
    
    // Textures fill as patterns on any Two.Path
    star.fill = texture;
    star.linewidth = 1;
    texture.scale = 0.109;
    
    two.update();
    event.preventDefault();
}

let ConcealedVerticalRodwithLBR = (event, context)=>{
  let width = 400, height= 700;
    var two = new Two({
      // type: Two.Types.canvas,
      fullscreen: true,
      autostart: true
    }).appendTo(context);
    
    var star = two.makeRectangle(85, 265, 170, 400);
    var texture = new Two.Texture('./images/ConcealedVerticalRodwithLBR.png')
    
    
    // Textures fill as patterns on any Two.Path
    star.fill = texture;
    star.linewidth = 1;
    texture.scale = 0.109;
    
    two.update();
    event.preventDefault();
}

/* bind events on document ready */
document.addEventListener("DOMContentLoaded", () => {
  document.getElementById("door").addEventListener("change", handleDoorTypeChangeHandler);
  document.getElementById("selectHW").addEventListener("change", handeLockChangeHandler);
  document.getElementById("resetShapes").addEventListener("click", resetShapes);
});

/* start - select box change handlers */
function handleDoorTypeChangeHandler(e) {
  e.preventDefault();

    two.clear();

    if (e.target.value) {
      document.getElementById('selectHW').value = '';
      
      if (document.querySelector(".inputsContainer .inputs-container:not(.hide)")) {
        document.querySelector(".inputsContainer .inputs-container:not(.hide)").classList.add("hide");
      }

      let doorWidth = 0;
      let doorHeight = 0;
      switch(e.target.value) {
        case 'F':
          doorWidth = 19.5;
          doorHeight = 42;
          break;
        case '2PA':
          doorWidth = 36;
          doorHeight = 84;
          break;
      }

      document.forms.doorLock.dWidth.value = doorWidth;
      document.forms.doorLock.dHeight.value = doorHeight;
    }
}

function resetShapes() {
    if (two.clear) {
      two.clear();
    }
    document.getElementById("door").value = '';
    document.getElementById("dimensionBar").classList.add("hide");
    document.getElementById("selectHW").value = '';
    document.getElementById("gapBar").classList.add('hide');
}

function handeLockChangeHandler(e) {
  e.preventDefault();

  // hide all the inputs container and show the related door inputs container
  if (document.querySelector(".inputsContainer .inputs-container:not(.hide)")) {
    document.querySelector(".inputsContainer .inputs-container:not(.hide)").classList.add("hide");
  }
  if (document.getElementById(`${e.target.value}Inputs`)) {
    document.getElementById(`${e.target.value}Inputs`).classList.remove('hide');
  }

  const doorType = document.forms.doorLock['door-type'].value;
  const doorWidth = Number(document.forms.doorLock.dWidth.value);
  const doorHeight = Number(document.forms.doorLock.dHeight.value);

  let lPos = 0;
  let tPos = 0;

  if (e.target.value) {
    switch(e.target.value) {
      case "RimExitDevice":
        tPos = 23.5;
        lPos = 1.0;
        break;
      case 'AuxiliaryLock':
        if (doorType === '2PA') {
          tPos = Math.round(doorHeight * 0.28);
          lPos = Math.round(doorWidth * 0.48);
        } else if (doorType === 'F') {
          tPos = Math.round(doorHeight * 0.60);
          lPos = Math.round(doorWidth * 0.90);
        }
        
        break;
      case "SurfaceVerticalRod":
        if (doorType === 'F') {
          tPos = Math.round(doorHeight * 0.48);
          lPos = 1.0;
        } else if (doorType === '2PA') {
          tPos = Math.round(doorHeight * 0.279);
          lPos = 1.0;
        }
        break;
    }

    document.getElementById("lPos").value = lPos;
    document.getElementById("tPos").value = tPos;
    
    
  } else {
    document.getElementById("gapBar").classList.add('hide');
  }

}

/* end - select box change handlers */

function validateDoorDimensions({doorType, doorWidth, doorHeight}) {
  let message = '';
  let isValid = true;

  if (!doorType) {
    message = "Please select the door type";
    isValid = false;
  } else if (!doorWidth || Number.isNaN(doorWidth)) {
    message = "Please provide the width of the door";
    isValid = false;
  } else  if (!doorHeight || Number.isNaN(doorHeight)) {
    message = "Please provide the height of the door";
    isValid = false;
  }
  
  // validate if door type is 2PA
  if (doorType === '2PA') {
    if (doorWidth > 40) {
      message = "Door's width should not exceed 40 inches";
      isValid = false;
    } else if (doorHeight > 84) {
      message = "Door's height should not exceed 84 inches";
      isValid = false;
    }
  }

  // validate if door type is F
  if (doorType === 'F') {
    if (doorWidth > 40 || doorWidth < 19.5) {
      message = "Door's width should be in between 19.5 to 40 inches";
      isValid = false;
    } else if (doorHeight > 70 || doorHeight < 42) {
      message = "Door's height should be in between 42 to 70 inches";
      isValid = false;
    }
  }

  return {message, isValid};
}